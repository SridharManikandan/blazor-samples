@page "/ReportViewer/ConditionalRowFormatting"
@page "/ReportViewer/ConditionalRowFormatting/Preview"
@using Microsoft.JSInterop
@using Microsoft.AspNetCore.Components
@inject IJSRuntime JSRuntime
@using blazor_samples.Data;

<div id="report-viewer"></div>

<div id="source-description">
    <p>
        This demo illustrates the Conditional Formatting feature along with <a href="https://help.boldreports.com/on-premise/report-designer/report-parameters/add/"
                                                                               target="_blank">Report Parameters</a> using the Tablix data region. Based on the country name selected in the <code>Highlight Country</code>
        parameter, the available customer details of the respective country are highlighted using conditional formatting. It makes the report easier
        to read horizontally and enhances the look and feel of report.
    </p>
    <ul>
        <li>
            <b>Conditional IIF Statement</b> is used to build <a href="https://help.boldreports.com/on-premise/report-designer/compose-report/properties-panel/#set-expression"
                                                                 target="_blank">expression</a> for background color, thereby it highlights the rows based on the <code>Country Name</code> field.
        </li>
    </ul>
    <p>
        Conditional row formatting report designing steps can be found in this <a href="https://help.boldreports.com/on-premise/report-designer/report-items/tablix/conditional-formatting-tablix-data-region/"
                                                                                  target="_blank">documentation</a> section.
    </p>
</div>

@code {
    // ReportViewer options
    BoldReportViewerOptions viewerOptions = new BoldReportViewerOptions();

    // Used to render the Bold Report Viewer component in Blazor page.
    public async void RenderReportViewer()
    {
        viewerOptions.ReportName = "conditional-row-formatting.rdl";
        viewerOptions.ServiceURL = "api/ReportViewerWebApi";
        await JSRuntime.InvokeVoidAsync("BoldReports.RenderViewer", "report-viewer", viewerOptions);
    }
    // Initial rendering of Bold Report Viewer
    protected override void OnAfterRender(bool firstRender)
    {
        RenderReportViewer();
    }
}